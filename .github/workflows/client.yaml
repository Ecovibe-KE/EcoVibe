# This workflow is for running tests on a React frontend application.
# It uses Node.js and npm to install dependencies and run tests.
# For more information see: https://docs.github.com/en/actions

name: React Client CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events for the "main" and "develop" branches
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main", "develop" ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "test"
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client 

    strategy:
      # You can test against multiple Node.js versions
      matrix:
        node-version: [20, 22]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # 1. Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Sets up the specified Node.js version and caches npm dependencies
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          # This caches the npm dependency folder to speed up subsequent runs
          cache: 'npm'
          # Specify the path to the lock file for correct caching in a monorepo
          cache-dependency-path: client/package-lock.json

      # 3. Installs project dependencies using npm ci (clean install)
      - name: Install dependencies
        run: npm ci

      # 4. Runs tests
      - name: Run tests
        # The 'npm test' command is standard for running tests
        run: npm test

