"""rename user_id to admin_id in services

Revision ID: 8ce2c0c67a00
Revises: cc5e5e2e5ca5
Create Date: 2025-09-21 18:21:34.142049

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '8ce2c0c67a00'
down_revision = 'cc5e5e2e5ca5'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('newsletter_subscriber',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=254), nullable=False),
    sa.Column('subscription_date', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.drop_table('newsletter_subscribers')
    op.add_column('services', sa.Column('admin_id', sa.Integer(), nullable=False))
    op.drop_constraint(op.f('services_user_id_fkey'), 'services', type_='foreignkey')
    op.create_foreign_key(None, 'services', 'users', ['admin_id'], ['id'])
    op.drop_column('services', 'user_id')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('services', sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'services', type_='foreignkey')
    op.create_foreign_key(op.f('services_user_id_fkey'), 'services', 'users', ['user_id'], ['id'])
    op.alter_column("services", "user_id", new_column_name="admin_id")
    op.create_table('newsletter_subscribers',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(length=254), autoincrement=False, nullable=False),
    sa.Column('subscription_date', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('newsletter_subscribers_pkey')),
    sa.UniqueConstraint('email', name=op.f('newsletter_subscribers_email_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.drop_table('newsletter_subscriber')
    # ### end Alembic commands ###
